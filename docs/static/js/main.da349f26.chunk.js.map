{"version":3,"sources":["services/getDataFromServer.js","components/ListItem.js","components/PokeList.js","components/SuggestionsList.js","components/FilterName.js","services/getCompleteDataFromServer.js","components/CardDetail.js","services/getDetailsFromServer.js","components/PokeDetail.js","components/App.js","index.js"],"names":["allPokesResume","formatData","data","results","map","poke","index","id","name","url","getDataFromServer","fetch","then","resp","json","catch","err","console","log","ListItem","pokemon","to","key","className","src","frontImage","alt","chain","evolves_to","evolve","species","evolution","types","type","PokeList","pokemons","showSuggestions","namesSuggestions","userQuery","handleSuggestedName","pokeNames","suggestion","filter","includes","toLowerCase","onClick","data-id","FilterName","handleSearch","allPokemonsNames","handleAutoSearch","onSubmit","onChange","placeholder","formatDetails","pokeURL","varieties","variety","is_default","push","evolution_chain","pokemonURL","getEvolutionFromServer","a","Promise","all","evolutionResp","evolutions","length","Object","assign","firstEvolve","secondEvolve","thirdEvolve","allPokemons","formatedPokes","newPokes","details","sprites","front_default","result","detailPokes","getEvolution","getCompleteDataFromServer","CardDetail","pokemonObj","join","getDetailsFromServer","PokeDetail","props","state","this","selectedPokemon","pokeInfo","setState","isArray","React","Component","App","userPokemon","detailPokemons","limit","bind","renderExploreList","renderDetail","ev","preventDefault","target","value","newPokeforDetails","pokes","allPokes","defaultPokemons","slice","selectedName","match","params","exact","path","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.da349f26.chunk.js","sourcesContent":["\nconst allPokesResume = \"https://pokeapi.co/api/v2/pokemon-species?limit=807\";\n\nconst formatData = data => {\n    const PokemonsInfo = data.results.map((poke, index) => {\n        return {\n            id: index,\n            name: poke.name,\n            url: poke.url\n        }\n    })\n    return PokemonsInfo\n}\n\n\n\nfunction getDataFromServer() {\n    return fetch(allPokesResume)\n        .then(resp => resp.json())\n        .then(data => formatData(data))\n        .catch(err => console.log(\"Fetch error: \" + err))\n}\n\nexport default getDataFromServer;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../stylesheets/pokeitem.scss';\n\nconst ListItem = ({ pokemon }) => {\n    console.log(pokemon)\n    return (\n        <Link to={`/info/${pokemon.name}`} key={\"info\" + pokemon.id}>\n            <li className=\"poke__list_item\">\n                <small className=\"poke__list_number\">{pokemon.id}</small>\n                <img src={pokemon.frontImage} alt={pokemon.name} className=\"poke__list_defaultimg\" />\n                <h5 className=\"poke__list_name\">{pokemon.name}</h5>\n                <div className=\"poke__list_evolve_wrapper\">\n                    <p>Evoluciona en:</p>\n                    <p>{(pokemon.chain) ? pokemon.chain.evolves_to.map(evolve => evolve.species.name) : pokemon.evolution}</p>\n                </div>\n                <ul className=\"poke__list_types_typeslist\">\n                    {pokemon.types.map(type => {\n                        return (\n                            <li className={`poke__list_types_itemtypes ${type}`} key={type}>{type}</li>\n                        )\n                    })}\n                </ul>\n            </li>\n        </Link>\n    )\n}\n\nexport default ListItem;","import React from 'react';\nimport ListItem from './ListItem';\nimport '../stylesheets/pokeitem.scss';\n\n\n\nconst PokeList = ({ pokemons }) => {\n    return (\n        <ul className=\"poke__list\">\n            {pokemons.map(pokemon => {\n                return (\n                    <ListItem pokemon={pokemon} key={pokemon.id}></ListItem>\n\n                )\n            })}\n        </ul>\n    )\n\n}\n\n\n\nexport default PokeList;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n\n\nconst showSuggestions = ({ namesSuggestions, userQuery, handleSuggestedName }) => {\n    const pokeNames = namesSuggestions.map(suggestion => suggestion[1])\n    //console.log(pokeNames)\n    if (userQuery !== \"\") {\n        return (\n            <ul className=\"filter__suggestions_list\">\n                {pokeNames\n                    .filter(name => name.includes(userQuery.toLowerCase()))\n                    .map(suggestion => {\n                        console.log(suggestion)\n                        return (<Link to={`/info/${suggestion}`}>\n                            <li className=\"filter__suggestions_list_item\" key={suggestion[1]} onClick={handleSuggestedName} data-id={suggestion}>{suggestion}</li>\n                        </Link>)\n                    })}\n            </ul>\n        )\n    }\n}\n\nexport { showSuggestions as SuggestionsList }","import React from 'react';\nimport '../stylesheets/filtername.scss';\nimport { SuggestionsList } from './SuggestionsList';\n\nconst FilterName = ({ handleSearch, allPokemonsNames, handleAutoSearch, userQuery, handleSuggestedName }) => {\n\n    return (\n        <form className=\"poke__form\" onSubmit={handleSearch}>\n            <div className=\"filter__suggestions_inputName_wrapper\">\n                <input type=\"text\" className=\"filter__suggestions_inputName\" onChange={handleAutoSearch} placeholder=\"Pikachu\" />\n                {(userQuery === \"\") ? <label className=\"filter__suggestions_inputName_label\">Ej: Pikachu</label> : \"\"}\n                {(userQuery !== \"\") ? < SuggestionsList namesSuggestions={allPokemonsNames} userQuery={userQuery} handleSuggestedName={handleSuggestedName} /> : \"\"}\n            </div>\n        </form>\n    )\n\n}\n\n\nexport default FilterName;\n\n// Incluir defaultValue={defaultValue} en el input\n// Cuando tengamos default value, vincular la renderización de la etiqueta ","function formatDetails(pokemon) {\n    const pokeURL = [];\n    for (let variety of pokemon.varieties) {\n        if (variety.is_default === true) pokeURL.push(variety.pokemon.url)\n    }\n    return {\n        id: pokemon.id,\n        name: pokemon.name,\n        evolution_chain: pokemon.evolution_chain.url,\n        pokemonURL: pokeURL\n\n    }\n}\n\nfunction extendPokemonInfo(pokemons) {\n    return Promise.all(pokemons.map(async function getdetails(pokemon) {\n        const details = fetch(pokemon.pokemonURL)\n            .then(resp => resp.json())\n            .then(data => {\n                let types = data.types.map(type => type.type.name)\n                return {\n                    frontImage: data.sprites.front_default,\n                    types: types\n                }\n            });\n        let result = await details\n        return Object.assign(pokemon, result)\n    }))\n}\n\nasync function getEvolutionFromServer(pokemons) {\n    // Reduce para reducir el número de promesas\n    return Promise.all(pokemons.map(async function getEvolve(pokemon) {\n        return fetch(pokemon.evolution_chain)\n            .then(resp => resp.json())\n            .then(evolutionResp => {\n                let evolutions = {};\n                if (evolutionResp.chain.evolves_to.length) {\n                    Object.assign(evolutions, { firstEvolve: evolutionResp.chain.species.name })\n                    Object.assign(evolutions, { secondEvolve: evolutionResp.chain.evolves_to[0].species.name })\n                    if (evolutionResp.chain.evolves_to[0].evolves_to.length) {\n                        Object.assign(evolutions, { thirdEvolve: evolutionResp.chain.evolves_to[0].evolves_to[0].species.name })\n                    }\n                } else {\n                    Object.assign(evolutions, { firstEvolve: \"No evoluciona\" })\n                }\n                return Object.assign(pokemon, evolutions)\n            })\n    }))\n}\n\nasync function getCompleteDataFromServer(allPokemons) {\n    const formatedPokes = Promise.all(allPokemons.map(pokemon => {\n        return fetch(pokemon.url)\n            .then(resp => resp.json())\n            .then(data => formatDetails(data))\n\n    }))\n    const newPokes = await formatedPokes;\n    const detailPokes = await extendPokemonInfo(newPokes);\n    const getEvolution = await getEvolutionFromServer(detailPokes)\n    return getEvolution\n\n\n}\n\n\n\nexport default getCompleteDataFromServer;","import React from 'react';\nimport '../stylesheets/detail.scss';\n\nconst CardDetail = ({ pokemonObj }) => {\n    console.log(pokemonObj)\n    debugger;\n    return (\n        <section className=\"detail__wrapper\">\n            <p>{pokemonObj.id}</p>\n            <h4 className=\"detail__name\">{pokemonObj.name}</h4>\n        </section >\n    )\n}\n\nexport default CardDetail;\n\n{/* <img src={pokemonObj.frontImage} alt={pokemonObj.name} />\n    <ul className=\"detail__types_list\">\n        {pokemonObj.types.map(type => {\n            return (<li className=\"detail__types_list_item\" key={pokemonObj.name + type}>{type}</li>)\n        })}\n    </ul>\n    <p>Evolution</p>\n{\n    pokemonObj.evolutions.map(evolution =>\n        (\n            <small key={pokemonObj.name + evolution}>{evolution}</small>\n        ))\n} */}","function formatData(data) {\n\n    return {\n        id: data.id,\n        name: data.name,\n        evolution: data.evolution_chain.url,\n        url: data.varieties.map(variety => {\n            if (variety.is_default) return variety.pokemon.url\n        }).join()\n    }\n}\n\nasync function getDetailsFromServer(pokemon) {\n    debugger;\n    const url = `https://pokeapi.co/api/v2/pokemon-species/${pokemon}`;\n    return fetch(url)\n        .then(resp => resp.json())\n        .then(data => formatData(data))\n    // .then(dat => console.log(dat))\n}\n\nexport default getDetailsFromServer;","import React from 'react';\nimport getCompleteDataFromServer from '../services/getCompleteDataFromServer';\nimport CardDetail from './CardDetail';\nimport { isArray } from 'util';\nimport getDetailsFromServer from '../services/getDetailsFromServer';\n\nclass PokeDetail extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            pokemon: [],\n        }\n    }\n\n\n    componentDidMount() {\n        debugger;\n        getDetailsFromServer(this.props.selectedPokemon)\n            .then(pokeInfo => this.setState({\n                pokemon: pokeInfo\n            }))\n    }\n\n    render() {\n        console.log(this.props)\n        const { pokemon } = this.state;\n        console.log(pokemon)\n        return isArray(pokemon) ? \"Cargando info...\" : <CardDetail pokemonObj={pokemon} />\n    }\n}\n\nexport default PokeDetail;","import React from 'react';\nimport getDataFromServer from '../services/getDataFromServer';\nimport PokeList from './PokeList';\nimport '../stylesheets/App.scss';\nimport FilterName from './FilterName';\nimport { Route, Switch, Link } from 'react-router-dom';\nimport PokeDetail from './PokeDetail';\nimport getDetailsFromServer from '../services/getDetailsFromServer';\nimport getCompleteDataFromServer from '../services/getCompleteDataFromServer';\n\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      allPokemons: [],\n      userPokemon: \"\",\n      detailPokemons: [],\n      limit: 24,\n    }\n    this.handleAutoSearch = this.handleAutoSearch.bind(this);\n    this.renderExploreList = this.renderExploreList.bind(this);\n    this.renderDetail = this.renderDetail.bind(this);\n  }\n\n  handleSearch(ev) {\n    ev.preventDefault();\n    console.log(\"Enviar formulario\")\n  }\n\n  handleAutoSearch(ev) {\n    const { allPokemons, limit, userPokemon } = this.state;\n    this.setState({\n      userPokemon: ev.target.value.toLowerCase()\n    });\n    const newPokeforDetails = allPokemons.filter(poke => poke.name.includes(ev.target.value.toLowerCase()));\n    getCompleteDataFromServer([newPokeforDetails])\n  }\n  // componentDidUpdate() {\n  //   const prevState = this.state.detailPokemons\n  //   const nextState = this.state.detailPokemons;\n  //   return nextState === prevState ? false : true\n  // }\n  componentDidMount() {\n    getDataFromServer()\n      .then(pokes => Promise.all(pokes))\n      .then(allPokes => {\n        this.setState({\n          allPokemons: allPokes\n        })\n        return allPokes\n      }\n      )\n      .then(data => {\n        const defaultPokemons = data.slice(0, this.state.limit);\n        return getCompleteDataFromServer(defaultPokemons)\n      })\n      .then(formatedPokes => this.setState({\n        detailPokemons: formatedPokes\n      }))\n  }\n\n  renderExploreList() {\n    const { detailPokemons } = this.state;\n    return ((detailPokemons.length !== 0) ? <PokeList pokemons={detailPokemons} /> : \"Cargando...\")\n  }\n\n  renderDetail(props) {\n    console.log(props)\n    const selectedName = props.match.params.name;\n    return (<PokeDetail selectedPokemon={selectedName} />)\n  }\n\n\n  render() {\n    const { allPokemons, userPokemon } = this.state;\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Link to=\"/\" >\n            <h1 className=\"poke__title\">Pokédex</h1>\n          </Link>\n        </header>\n        <div className=\"poke__main_wrapper\">\n          <FilterName handleSearch={this.handleSearch} handleSuggestedName={this.handleSuggestedName} handleAutoSearch={this.handleAutoSearch} allPokemonsNames={allPokemons.map(poke => [poke.id, poke.name])} userQuery={userPokemon} />\n          <section className=\"poke__main\">\n            <Switch>\n              <Route exact path=\"/\" render={this.renderExploreList} />\n              <Route path=\"/info/:name\" render={this.renderDetail} />\n            </Switch>\n          </section>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/core/_reset.scss';\nimport App from './components/App';\nimport { HashRouter } from 'react-router-dom';\n;\n\nReactDOM.render(<HashRouter> <App /> </HashRouter>, document.getElementById('root'));"],"sourceRoot":""}