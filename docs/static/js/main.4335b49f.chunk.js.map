{"version":3,"sources":["services/getDataFromServer.js","components/ListItem.js","components/PokeList.js","components/SuggestionsList.js","components/FilterName.js","services/getEvolutionFromServer.js","services/getCompleteDataFromServer.js","components/CardDetail.js","components/PokeDetail.js","services/getDetailsFromServer.js","components/App.js","index.js"],"names":["allPokesResume","formatData","data","results","map","poke","index","id","name","url","getDataFromServer","fetch","then","resp","json","catch","err","console","log","ListItem","pokemon","to","key","className","src","frontImage","alt","types","type","PokeList","pokemons","showSuggestions","namesSuggestions","userQuery","handleSuggestedName","pokeNames","suggestion","filter","includes","toLowerCase","onClick","data-id","FilterName","handleSearch","allPokemonsNames","handleAutoSearch","onSubmit","onChange","placeholder","a","chain","evolves_to","evolutionChain","length","evolution","species","getEvolutionFromServer","result","sprites","front_default","backImage","back_default","shinyImage","front_shiny","evolutions","getCompleteDataFromServer","pokeName","PokemonByID","formatDetails","CardDetail","pokemonObj","PokeDetail","props","state","this","selectedPokemon","pokeInfo","setState","isArray","React","Component","getDetailsFromServer","resumePokes","Promise","all","newTypes","formatPokemonData","App","allPokemons","userPokemon","detailPokemons","limit","bind","renderExploreList","renderDetail","pokemonName","target","dataset","ev","preventDefault","value","newPokeforDetails","slice","Object","assign","completePokemons","pokes","allPokes","defaultPokemons","selectedName","match","params","exact","path","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.4335b49f.chunk.js","sourcesContent":["\nconst allPokesResume = \"https://pokeapi.co/api/v2/pokemon?limit=964\";\n\nconst formatData = data => {\n    const PokemonsInfo = data.results.map((poke, index) => {\n        return {\n            id: index,\n            name: poke.name,\n            url: poke.url\n        }\n    })\n    return PokemonsInfo\n}\n\n\n\nfunction getDataFromServer() {\n    return fetch(allPokesResume)\n        .then(resp => resp.json())\n        .then(data => formatData(data))\n        .catch(err => console.log(\"Fetch error: \" + err))\n}\n\nexport default getDataFromServer;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../stylesheets/pokeitem.scss';\n\nconst ListItem = ({ pokemon }) => {\n    return (\n        <Link to={`/info/${pokemon.name}`} key={\"info\" + pokemon.id}>\n            <li className=\"poke__list_item\">\n                <small className=\"poke__list_number\">{pokemon.id}</small>\n                <img src={pokemon.frontImage} alt={pokemon.name} className=\"poke__list_defaultimg\" />\n                <h5 className=\"poke__list_name\">{pokemon.name}</h5>\n                {/* <div className=\"poke__list_evolve_wrapper\">\n                    <p>Evoluciona en:</p>\n                    <p>{(pokemon.chain) ? pokemon.chain.evolves_to : pokemon.evolution}</p>\n                </div> */}\n                <ul className=\"poke__list_types_typeslist\">\n                    {pokemon.types.map(type => {\n                        return (\n                            <li className={`poke__list_types_itemtypes ${type}`} key={type}>{type}</li>\n                        )\n                    })}\n                </ul>\n            </li>\n        </Link>\n    )\n}\n\nexport default ListItem;","import React from 'react';\nimport ListItem from './ListItem';\nimport '../stylesheets/pokeitem.scss';\n\n\n\nconst PokeList = ({ pokemons }) => {\n    return (\n        <ul className=\"poke__list\">\n            {pokemons.map(pokemon => {\n                return (\n\n                    <ListItem pokemon={pokemon} key={pokemon.id}></ListItem>\n\n                )\n            })}\n        </ul>\n    )\n\n}\n\n\n\nexport default PokeList;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n\n\nconst showSuggestions = ({ namesSuggestions, userQuery, handleSuggestedName }) => {\n    const pokeNames = namesSuggestions.map(suggestion => suggestion[1])\n    //console.log(pokeNames)\n    if (userQuery !== \"\") {\n        return (\n            <ul className=\"filter__suggestions_list\">\n                {pokeNames\n                    .filter(name => name.includes(userQuery.toLowerCase()))\n                    .map(suggestion => {\n                        console.log(suggestion)\n                        return (<Link to={`/info/${suggestion}`}>\n                            <li className=\"filter__suggestions_list_item\" key={suggestion[1]} onClick={handleSuggestedName} data-id={suggestion}>{suggestion}</li>\n                        </Link>)\n                    })}\n            </ul>\n        )\n    }\n}\n\nexport { showSuggestions as SuggestionsList }","import React from 'react';\nimport '../stylesheets/filtername.scss';\nimport { SuggestionsList } from './SuggestionsList';\n\nconst FilterName = ({ handleSearch, allPokemonsNames, handleAutoSearch, userQuery, handleSuggestedName }) => {\n\n    return (\n        <form className=\"poke__form\" onSubmit={handleSearch}>\n            <button type=\"submit\"> Buscar </button>\n            <div className=\"filter__suggestions_inputName_wrapper\">\n                <input type=\"text\" className=\"filter__suggestions_inputName\" onChange={handleAutoSearch} placeholder=\"Pikachu\" />\n                {(userQuery === \"\") ? <label className=\"filter__suggestions_inputName_label\">Ej: Pikachu</label> : \"\"}\n                {(userQuery !== \"\") ? < SuggestionsList namesSuggestions={allPokemonsNames} userQuery={userQuery} handleSuggestedName={handleSuggestedName} /> : \"\"}\n            </div>\n        </form>\n    )\n\n}\n\n\nexport default FilterName;\n\n// Incluir defaultValue={defaultValue} en el input\n// Cuando tengamos default value, vincular la renderización de la etiqueta ","async function getEvolutionFromServer(pokemon) {\n    return (fetch(`https://pokeapi.co/api/v2/evolution-chain/${pokemon.id}`)\n        .then(resp => resp.json())\n        .then(data => (data.chain.evolves_to[0].evolves_to))\n        .then(evolutionChain =>\n            (evolutionChain.length !== 0) ?\n                evolutionChain.map(evolution => evolution.species.name) :\n                [\"No evoluciona\"]))\n        .catch(err => [\"No evoluciona\"])\n    //.then(respo => Promise.all(respo))\n}\nexport default getEvolutionFromServer;","import getEvolutionFromServer from './getEvolutionFromServer';\n\n\nasync function formatDetails(pokemon) {\n    let types = pokemon.types.map(type => type.type.name)\n    let evolution = getEvolutionFromServer(pokemon)\n    let result = await evolution\n    return {\n        id: pokemon.id,\n        name: pokemon.name,\n        frontImage: pokemon.sprites.front_default,\n        backImage: pokemon.sprites.back_default,\n        shinyImage: pokemon.sprites.front_shiny,\n        types: types,\n        evolutions: result\n    }\n\n}\n\nconst getCompleteDataFromServer = (pokeName) => {\n    const PokemonByID = `https://pokeapi.co/api/v2/pokemon/${pokeName}`;\n    return fetch(PokemonByID)\n        .then(resp => resp.json())\n        .then(pokemon => formatDetails(pokemon))\n\n\n}\n\nexport default getCompleteDataFromServer;","import React from 'react';\nimport '../stylesheets/detail.scss';\n\nconst CardDetail = ({ pokemonObj }) => {\n    debugger;\n    return (\n        <section className=\"detail__wrapper\">\n            <img src={pokemonObj.frontImage} alt={pokemonObj.name} />\n            <h5>{pokemonObj.name}</h5>\n            <ul className=\"detail__types_list\">\n                {pokemonObj.types.map(type => {\n                    return (<li className=\"detail__types_list_item\" key={pokemonObj.name + type}>{type}</li>)\n                })}\n            </ul>\n            <p>Evolution</p>\n            {pokemonObj.evolutions.map(evolution =>\n                (\n                    <small key={pokemonObj.name + evolution}>{evolution}</small>\n                ))}\n        </section >\n    )\n}\n\nexport default CardDetail;","import React from 'react';\nimport getCompleteDataFromServer from '../services/getCompleteDataFromServer';\nimport CardDetail from './CardDetail';\nimport { isArray } from 'util';\n\nclass PokeDetail extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            pokemon: [],\n        }\n    }\n\n\n    componentDidUpdate() {\n        debugger;\n        getCompleteDataFromServer(this.props.selectedPokemon)\n            .then(pokeInfo => this.setState({\n                pokemon: pokeInfo\n            }))\n    }\n\n    render() {\n        console.log(this.props)\n        const { pokemon } = this.state;\n        return isArray(pokemon) ? \"Cargando info...\" : <CardDetail pokemonObj={pokemon} />\n    }\n}\n\nexport default PokeDetail;","function formatPokemonData(data) {\n    return data.map(pokemon => {\n        let newTypes = pokemon.types.map(type => type.type.name)\n        return {\n            id: pokemon.id,\n            name: pokemon.name,\n            frontImage: pokemon.sprites.front_default || `https://via.placeholder.com/100.jpg?${pokemon.name}`,\n            shinyImage: pokemon.sprites.front_shiny || `https://via.placeholder.com/100.jpg?${pokemon.name}`,\n            types: newTypes,\n        }\n    })\n}\n\nfunction getDetailsFromServer(resumePokes) {\n    const pokesInfo = Promise.all(resumePokes.map(poke => fetch(poke.url).then(resp => resp.json())));\n    return pokesInfo\n        .then(data => formatPokemonData(data))\n}\n\nexport default getDetailsFromServer;","import React from 'react';\nimport getDataFromServer from '../services/getDataFromServer';\nimport PokeList from './PokeList';\nimport '../stylesheets/App.scss';\nimport FilterName from './FilterName';\nimport { Route, Switch, Link } from 'react-router-dom';\nimport PokeDetail from './PokeDetail';\nimport getDetailsFromServer from '../services/getDetailsFromServer';\n\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      allPokemons: [],\n      userPokemon: \"\",\n      detailPokemons: [],\n      limit: 24,\n    }\n    this.handleSuggestedName = this.handleSuggestedName.bind(this);\n    this.handleAutoSearch = this.handleAutoSearch.bind(this);\n    this.renderExploreList = this.renderExploreList.bind(this);\n    this.renderDetail = this.renderDetail.bind(this);\n  }\n\n  handleSuggestedName(pokemonName) {\n    //ev.preventDefault();\n    this.setState({\n      userPokemon: pokemonName.target.dataset.id,\n    })\n  }\n\n\n  handleSearch(ev) {\n    ev.preventDefault();\n    console.log(\"Enviar formulario\")\n  }\n\n  handleAutoSearch(ev) {\n    const { allPokemons, limit, userPokemon } = this.state;\n    this.setState({\n      userPokemon: ev.target.value.toLowerCase()\n    });\n    debugger;\n    const newPokeforDetails = allPokemons.filter(poke => poke.name.includes(ev.target.value.toLowerCase()));\n    getDetailsFromServer(newPokeforDetails.slice(0, limit))\n      .then(resp => Promise.all(resp.map(poke => {\n        const url = \"https://pokeapi.co/api/v2/evolution-chain/\" + poke.id;\n        return fetch(url)\n          .then(resp => resp.json())\n          .then(evolution => Object.assign(poke, evolution))\n          .catch(err => {\n            let noEvolve = { evolution: \"No evoluciona\" };\n            return Object.assign(poke, noEvolve)\n          })\n      }))\n        .then(completePokemons => this.setState({\n          detailPokemons: completePokemons\n        })))\n  }\n  // componentDidUpdate() {\n  //   const prevState = this.state.detailPokemons\n  //   const nextState = this.state.detailPokemons;\n  //   return nextState === prevState ? false : true\n  // }\n  componentDidMount() {\n    getDataFromServer()\n      .then(pokes => Promise.all(pokes))\n      .then(allPokes => {\n        this.setState({\n          allPokemons: allPokes\n        })\n        return allPokes\n      }\n      )\n      .then(data => {\n        const defaultPokemons = data.slice(0, this.state.limit);\n        return getDetailsFromServer(defaultPokemons)\n      })\n      .then(resp => Promise.all(resp.map(poke => {\n        const url = \"https://pokeapi.co/api/v2/evolution-chain/\" + poke.id;\n        return fetch(url)\n          .then(resp => resp.json())\n          .then(evolution => Object.assign(poke, evolution))\n      })))\n      .then(completePokemons => this.setState({\n        detailPokemons: completePokemons\n      }))\n  }\n\n  renderExploreList() {\n    const { detailPokemons } = this.state;\n    return ((detailPokemons.length !== 0) ? <PokeList pokemons={detailPokemons} /> : \"Cargando...\")\n  }\n\n  renderDetail(props) {\n    console.log(props)\n    const selectedName = props.match.params.name;\n    return (<PokeDetail selectedPokemon={selectedName} />)\n  }\n\n\n  render() {\n    const { allPokemons, userPokemon } = this.state;\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Link to=\"/\" >\n            <h1 className=\"poke__title\">Pokédex</h1>\n          </Link>\n        </header>\n        <div className=\"poke__main_wrapper\">\n          <FilterName handleSearch={this.handleSearch} handleSuggestedName={this.handleSuggestedName} handleAutoSearch={this.handleAutoSearch} allPokemonsNames={allPokemons.map(poke => [poke.id, poke.name])} userQuery={userPokemon} />\n          <section className=\"poke__main\">\n            <Switch>\n              <Route exact path=\"/\" render={this.renderExploreList} />\n              <Route path=\"/info/:name\" render={this.renderDetail} />\n            </Switch>\n          </section>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/core/_reset.scss';\nimport App from './components/App';\nimport { HashRouter } from 'react-router-dom';\n;\n\nReactDOM.render(<HashRouter> <App /> </HashRouter>, document.getElementById('root'));"],"sourceRoot":""}