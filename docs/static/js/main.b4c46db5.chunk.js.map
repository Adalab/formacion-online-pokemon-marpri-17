{"version":3,"sources":["services/getDataFromServer.js","services/getDetailsFromServer.js","components/ListItem.js","components/PokeList.js","components/SuggestionsList.js","components/FilterName.js","services/getEvolutionFromServer.js","services/getCompleteDataFromServer.js","components/CardDetail.js","components/PokeDetail.js","components/App.js","index.js"],"names":["allPokesResume","formatData","data","results","map","poke","name","url","getDataFromServer","fetch","then","resp","json","catch","err","console","log","getDetailsFromServer","resumePoke","Promise","all","Response","ListItem","pokemon","to","id","key","className","src","frontImage","alt","types","type","PokeList","pokemons","showSuggestions","namesSuggestions","userQuery","handleSuggestedName","filter","suggestion","includes","toLowerCase","onClick","data-id","FilterName","handleSearch","allPokemonsNames","handleAutoSearch","onSubmit","onChange","placeholder","a","chain","evolves_to","evolutionChain","length","evolution","species","getEvolutionFromServer","result","sprites","front_default","backImage","back_default","shinyImage","front_shiny","evolutions","getCompleteDataFromServer","pokeID","PokemonByID","formatDetails","CardDetail","pokemonObj","PokeDetail","props","state","this","pokeInfo","setState","isArray","React","Component","App","allPokemons","userPokemon","detailPokemons","limit","bind","renderExploreList","renderDetail","pokemonName","target","dataset","newTypes","ev","preventDefault","value","newPokeforDetails","slice","formatPokemonData","prevState","pokes","allPokes","defaultPokemons","detailspokes","selectedId","match","params","exact","path","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b4c46db5.chunk.js","sourcesContent":["\nconst allPokesResume = \"https://pokeapi.co/api/v2/pokemon?limit=964\";\n\nconst formatData = data => {\n    const PokemonsInfo = data.results.map(poke => {\n        return {\n            name: poke.name,\n            url: poke.url\n        }\n    })\n    return PokemonsInfo\n}\n\n\n\nfunction getDataFromServer() {\n    return fetch(allPokesResume)\n        .then(resp => resp.json())\n        .then(data => formatData(data))\n        .catch(err => console.log(\"Fetch error: \" + err))\n}\n\nexport default getDataFromServer;","const getDetailsFromServer = (resumePoke) => {\n    debugger\n    return Promise.all(resumePoke.map(poke => fetch(poke.url)\n        .then(Response => Response.json())))\n    // .then(resp => resp.json())\n}\n\nexport default getDetailsFromServer;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../stylesheets/pokeitem.scss';\n\nconst ListItem = ({ pokemon }) => {\n    return (\n        <Link to={`/info/${pokemon.id}`} key={\"info\" + pokemon.id}>\n            <li className=\"poke__list_item\">\n                <small className=\"poke__list_number\">{pokemon.id}</small>\n                <img src={pokemon.frontImage} alt={pokemon.name} className=\"poke__list_defaultimg\" />\n                <h5 className=\"poke__list_name\">{pokemon.name}</h5>\n                <ul className=\"poke__list_types_typeslist\">\n                    {pokemon.types.map(type => {\n                        return (\n                            <li className={`poke__list_types_itemtypes ${type}`} key={type}>{type}</li>\n                        )\n                    })}\n                </ul>\n            </li>\n        </Link>\n    )\n}\n\nexport default ListItem;","import React from 'react';\nimport getDetailsFromServer from '../services/getDetailsFromServer'\nimport ListItem from './ListItem';\nimport '../stylesheets/pokeitem.scss';\nimport getDataFromServer from '../services/getDataFromServer';\n\n\n\nconst PokeList = ({ pokemons }) => {\n    debugger;\n    return (\n        <ul className=\"poke__list\">\n            {pokemons.map(pokemon => {\n                return (\n\n                    <ListItem pokemon={pokemon} key={pokemon.id}></ListItem>\n\n                )\n            })}\n        </ul>\n    )\n\n}\n\n\n\nexport default PokeList;\n\n{/*  */ }","import React from 'react';\n\n\nconst showSuggestions = ({ namesSuggestions, userQuery, handleSuggestedName }) => {\n    if (userQuery !== \"\") {\n        return (\n            <ul className=\"filter__suggestions_list\">\n                {namesSuggestions\n                    .filter(suggestion => suggestion.includes(userQuery.toLowerCase()))\n                    .map(suggestion => {\n                        return <li className=\"filter__suggestions_list_item\" key={suggestion} onClick={handleSuggestedName} data-id={suggestion}>{suggestion}</li>\n                    })}\n            </ul>\n        )\n    }\n}\n\nexport { showSuggestions as SuggestionsList }","import React from 'react';\nimport '../stylesheets/filtername.scss';\nimport { SuggestionsList } from './SuggestionsList';\n\nconst FilterName = ({ handleSearch, allPokemonsNames, handleAutoSearch, userQuery, handleSuggestedName }) => {\n\n    return (\n        <form className=\"poke__form\" onSubmit={handleSearch}>\n            <button type=\"submit\"> Buscar </button>\n            <div className=\"filter__suggestions_inputName_wrapper\">\n                <input type=\"text\" className=\"filter__suggestions_inputName\" onChange={handleAutoSearch} placeholder=\"Pikachu\" />\n                {(userQuery === \"\") ? <label className=\"filter__suggestions_inputName_label\">Ej: Pikachu</label> : \"\"}\n                {(userQuery !== \"\") ? < SuggestionsList namesSuggestions={allPokemonsNames} userQuery={userQuery} handleSuggestedName={handleSuggestedName} /> : \"\"}\n            </div>\n        </form>\n    )\n\n}\n\n\nexport default FilterName;\n\n// Incluir defaultValue={defaultValue} en el input\n// Cuando tengamos default value, vincular la renderización de la etiqueta ","async function getEvolutionFromServer(pokemon) {\n    return (fetch(`https://pokeapi.co/api/v2/evolution-chain/${pokemon.id}`)\n        .then(resp => resp.json())\n        .then(data => (data.chain.evolves_to[0].evolves_to))\n        .then(evolutionChain =>\n            (evolutionChain.length !== 0) ?\n                evolutionChain.map(evolution => evolution.species.name) :\n                [\"No evoluciona\"]))\n    //.then(respo => Promise.all(respo))\n}\nexport default getEvolutionFromServer;","import getEvolutionFromServer from './getEvolutionFromServer';\n\n\nasync function formatDetails(pokemon) {\n    let types = pokemon.types.map(type => type.type.name)\n    let evolution = getEvolutionFromServer(pokemon)\n    let result = await evolution\n    return {\n        id: pokemon.id,\n        name: pokemon.name,\n        frontImage: pokemon.sprites.front_default,\n        backImage: pokemon.sprites.back_default,\n        shinyImage: pokemon.sprites.front_shiny,\n        types: types,\n        evolutions: result\n    }\n\n}\n\nconst getCompleteDataFromServer = (pokeID) => {\n    const PokemonByID = `https://pokeapi.co/api/v2/pokemon/${pokeID}`;\n    return fetch(PokemonByID)\n        .then(resp => resp.json())\n        .then(pokemon => formatDetails(pokemon))\n\n\n}\n\nexport default getCompleteDataFromServer;","import React from 'react';\nimport '../stylesheets/detail.scss';\n\nconst CardDetail = ({ pokemonObj }) => {\n    debugger;\n    return (\n        <section className=\"detail__wrapper\">\n            <img src={pokemonObj.frontImage} alt={pokemonObj.name} />\n            <h5>{pokemonObj.name}</h5>\n            <ul className=\"detail__types_list\">\n                {pokemonObj.types.map(type => {\n                    return (<li className=\"detail__types_list_item\" key={pokemonObj.name + type}>{type}</li>)\n                })}\n            </ul>\n            <p>Evolution</p>\n            {pokemonObj.evolutions.map(evolution =>\n                (\n                    <small key={pokemonObj.name + evolution}>{evolution}</small>\n                ))}\n        </section >\n    )\n}\n\nexport default CardDetail;","import React from 'react';\nimport getCompleteDataFromServer from '../services/getCompleteDataFromServer';\nimport CardDetail from './CardDetail';\nimport { isArray } from 'util';\n\nclass PokeDetail extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            pokemon: [],\n        }\n    }\n\n\n    componentDidMount() {\n        getCompleteDataFromServer(this.props.pokeID)\n            .then(pokeInfo => this.setState({\n                pokemon: pokeInfo\n            }, () => console.log(this.state)))\n    }\n\n    render() {\n        const { pokemon } = this.state;\n        console.log(this.state)\n        return isArray(pokemon) ? \"Cargando info...\" : <CardDetail pokemonObj={pokemon} />\n    }\n}\n\nexport default PokeDetail;","import React from 'react';\nimport getDataFromServer from '../services/getDataFromServer';\nimport PokeList from './PokeList';\nimport '../stylesheets/App.scss';\nimport FilterName from './FilterName';\nimport { Route, Switch, Link } from 'react-router-dom';\nimport PokeDetail from './PokeDetail';\nimport getDetailsFromServer from '../services/getDetailsFromServer';\n\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      allPokemons: [],\n      userPokemon: \"\",\n      detailPokemons: [],\n      limit: 24,\n    }\n    this.handleSuggestedName = this.handleSuggestedName.bind(this);\n    this.handleAutoSearch = this.handleAutoSearch.bind(this);\n    this.renderExploreList = this.renderExploreList.bind(this);\n    this.renderDetail = this.renderDetail.bind(this);\n  }\n\n  handleSuggestedName(pokemonName) {\n    debugger;\n    //ev.preventDefault();\n    this.setState({\n      userPokemon: pokemonName.target.dataset.id,\n    })\n  }\n  formatPokemonData(data) {\n    return data.map(pokemon => {\n      let newTypes = pokemon.types.map(type => type.type.name)\n      return {\n        id: pokemon.id,\n        name: pokemon.name,\n        frontImage: pokemon.sprites.front_default || `https://via.placeholder.com/100.jpg?${pokemon.name}`,\n        shinyImage: pokemon.sprites.front_shiny || `https://via.placeholder.com/100.jpg?${pokemon.name}`,\n        types: newTypes,\n      }\n    })\n  }\n\n  handleSearch(ev) {\n    ev.preventDefault();\n    console.log(\"Enviar formulario\")\n  }\n\n  handleAutoSearch(ev) {\n    debugger;\n    const { allPokemons, limit } = this.state;\n    this.setState({\n      userPokemon: ev.target.value.toLowerCase()\n    });\n    const newPokeforDetails = allPokemons.filter(poke => poke.name.includes(ev.target.value.toLowerCase()))\n    getDetailsFromServer(newPokeforDetails.slice(0, limit))\n      .then(poke => this.formatPokemonData(poke))\n      .then(resp => this.setState({\n        detailPokemons: resp\n      }, () => console.log(this.state)))\n  }\n  componentDidUpdate() {\n    const prevState = this.state.detailPokemons\n    const nextState = this.state.detailPokemons;\n    return nextState === prevState ? false : true\n  }\n  componentDidMount() {\n    getDataFromServer()\n      .then(pokes => Promise.all(pokes))\n      .then(allPokes => {\n        this.setState({\n          allPokemons: allPokes\n        })\n        return allPokes\n      }\n      )\n      .then(data => {\n        debugger;\n        const defaultPokemons = data.slice(0, this.state.limit);\n        getDetailsFromServer(defaultPokemons)\n          .then(pokes => this.formatPokemonData(pokes))\n          //.then(r => console.log(r))\n          .then(detailspokes => this.setState({\n            detailPokemons: detailspokes,\n          }))\n      })\n  }\n\n  renderExploreList() {\n    const { detailPokemons } = this.state;\n    return (<PokeList pokemons={detailPokemons} />)\n  }\n\n  renderDetail(props) {\n    const selectedId = props.match.params.id;\n    return (<PokeDetail pokeID={selectedId} />)\n  }\n\n\n  render() {\n    const { allPokemons, userPokemon } = this.state;\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Link to=\"/\" >\n            <h1 className=\"poke__title\">Pokédex</h1>\n          </Link>\n        </header>\n        <div className=\"poke__main_wrapper\">\n          <FilterName handleSearch={this.handleSearch} handleSuggestedName={this.handleSuggestedName} handleAutoSearch={this.handleAutoSearch} allPokemonsNames={allPokemons.map(poke => poke.name)} userQuery={userPokemon} />\n          <section className=\"poke__main\">\n            <Switch>\n              <Route exact path=\"/\" render={this.renderExploreList} />\n              <Route path=\"/info/:id\" render={this.renderDetail} />\n            </Switch>\n          </section>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/core/_reset.scss';\nimport App from './components/App';\nimport { HashRouter } from 'react-router-dom';\n;\n\nReactDOM.render(<HashRouter> <App /> </HashRouter>, document.getElementById('root'));"],"sourceRoot":""}